//@version=5
// -----------------------------------------------------------------------------
// TECHNICAL SPEC IMPLEMENTATION
//
// Module:      SCS v2.0 - Layer 1, 2, 3 & 4 Combined
// Spec Version: L1 v3.3 + L2 v2.0 + L3 v3.0 + L4 v2.0 (v1.2 - Syntax Fix)
// Author:      Gemini & Trần Hoàng Anh
// Date:        23/07/2025
//
// -----------------------------------------------------------------------------
indicator("SCS - Layer 1, 2, 3 & 4 Combined", shorttitle="SCS-L1-4", overlay=true, precision=2)

// -----------------------------------------------------------------------------
// Section 1: INPUTS
// -----------------------------------------------------------------------------
// --- Layer 1 Inputs ---
grp_l1 = "Layer 1: Macro Trend Settings"
l1_ema_len    = input.int(50, "EMA Length", minval=1, group=grp_l1, tooltip="Chu kỳ EMA cho xu hướng chính. Mặc định 50 cho H4.")
l1_price_src  = input.source(close, "Price Source", group=grp_l1)
l1_use_atr_logic = input.bool(true, "Use ATR Logic?", group=grp_l1, tooltip="Bật để dùng ngưỡng động theo ATR. Tắt để dùng ngưỡng cố định theo Multiplier.")
l1_atr_len    = input.int(14, "ATR Length", group=grp_l1)
l1_atr_mult   = input.float(1.5, "ATR Multiplier", group=grp_l1, step=0.1)
l1_strong_mult = input.float(1.005, "Fixed Multiplier", group=grp_l1, step=0.001)

// --- Layer 2 Inputs ---
grp_l2 = "Layer 2: Trade Setup Zone Settings"
l2_bb_len     = input.int(30, "BB Period", minval=1, group=grp_l2)
l2_bb_src     = input.source(close, "BB Source", group=grp_l2)
l2_bb_mult    = input.float(2.0, "BB StdDev Multiplier", minval=0.001, maxval=50, step=0.1, group=grp_l2)
l2_ma_type    = input.string("SMA", "BB Basis MA Type", options=["SMA", "EMA"], group=grp_l2)
l2_vol_ma_len = input.int(20, "Volume MA Length", group=grp_l2)
l2_vol_mult   = input.float(1.5, "Breakout Vol Multiplier", group=grp_l2, step=0.1)

// --- Layer 3 Inputs ---
grp_l3 = "Layer 3: Trigger Confirmation Settings"
l3_rsi_len = input.int(14, "RSI Length", group=grp_l3)
l3_rsi_src = input.source(close, "RSI Source", group=grp_l3)
l3_macd_fast_len = input.int(12, "MACD Fast Length", group=grp_l3)
l3_macd_slow_len = input.int(26, "MACD Slow Length", group=grp_l3)
l3_macd_signal_len = input.int(9, "MACD Signal Length", group=grp_l3)

// --- Layer 4 Inputs ---
grp_l4 = "Layer 4: Market Structure Settings"
l4_daily_pivot_mult = input.float(1.0, "Daily Pivot Multiplier", group=grp_l4, step=0.1)
l4_weekly_pivot_mult = input.float(1.5, "Weekly Pivot Multiplier", group=grp_l4, step=0.1)
l4_atr_len = input.int(14, "ATR Length for Proximity", group=grp_l4)
l4_proximity_mult = input.float(0.5, "Proximity Multiplier (x ATR)", group=grp_l4)

// --- Visual Inputs ---
grp_vis = "Visual Settings"
show_channel = input.bool(true, "Show ATR Channel?", group=grp_vis)
show_pivots = input.bool(true, "Show Pivot Levels?", group=grp_vis)

// -----------------------------------------------------------------------------
// Section 2: LOGIC FUNCTIONS
// -----------------------------------------------------------------------------
// --- Layer 1 Function ---
f_getLayer1_Score(price, ema_len, use_atr, atr_len, atr_mult, strong_mult) =>
    ema_val = ta.ema(price, ema_len)
    float upper_threshold = na, float lower_threshold = na
    if use_atr
        atr_val = ta.atr(atr_len)
        upper_threshold := ema_val + (atr_mult * atr_val)
        lower_threshold := ema_val - (atr_mult * atr_val)
    else
        upper_threshold := ema_val * strong_mult
        lower_threshold := ema_val * (2 - strong_mult)
    int score = 0 
    if price > upper_threshold
        score := 35
    else if price > ema_val
        score := 15
    else if price < lower_threshold
        score := -35
    else if price < ema_val
        score := -15
    [score, ema_val, upper_threshold, lower_threshold]

// --- Layer 2 Function ---
f_getLayer2_Score_Adaptive(price, bb_len, bb_mult, ma_type, score_L1, vol_ma_len, vol_mult) =>
    float basis = ma_type == "SMA" ? ta.sma(price, bb_len) : ta.ema(price, bb_len)
    dev = bb_mult * ta.stdev(price, bb_len)
    upper = basis + dev
    lower = basis - dev
    bb_width = (upper - lower) / basis
    vol_sma = ta.sma(volume, vol_ma_len)
    isSqueeze = bb_width < ta.lowest(bb_width, 120) * 1.1
    isBreakoutVolume = volume > (vol_mult * vol_sma)
    int score = 0
    if isSqueeze and isBreakoutVolume
        if price > upper
            score := 15
        else if price < lower
            score := -15
    else if score_L1 == 35 and price > basis
        score := 5
    else if score_L1 == -35 and price < basis
        score := -5
    else
        isRejectionCandleUp = price <= lower and close > (high + low) / 2
        isTrapCandleUp = price <= lower and not isRejectionCandleUp
        isRejectionCandleDown = price >= upper and close < (high + low) / 2
        isTrapCandleDown = price >= upper and not isRejectionCandleDown
        if isRejectionCandleUp
            score := 20
        else if isTrapCandleUp
            score := 0
        else if price < basis
            score := 10
        else if isRejectionCandleDown
            score := -20
        else if isTrapCandleDown
            score := 0
        else if price > basis
            score := -10
    [score, basis, upper, lower]

// --- Layer 3 Function (UPDATED) ---
f_getLayer3_Score_Adaptive(score_L1, rsi_src, rsi_len, macd_fast, macd_slow, macd_signal, vol_ma_len) =>
    // Step 1: Xác định ngưỡng RSI động dựa trên bối cảnh Lớp 1
    int rsi_buy_lvl = 51
    int rsi_sell_lvl = 49
    if score_L1 == 35
        rsi_buy_lvl := 60
        rsi_sell_lvl := 50
    else if score_L1 == 0
        rsi_buy_lvl := 55
        rsi_sell_lvl := 45
    else if score_L1 == -35
        rsi_buy_lvl := 50
        rsi_sell_lvl := 40

    // Step 2: Tính toán các chỉ báo nền tảng
    rsi_val = ta.rsi(rsi_src, rsi_len)
    [_, _, macd_hist] = ta.macd(close, macd_fast, macd_slow, macd_signal)
    vol_sma = ta.sma(volume, vol_ma_len)

    // Step 3: Chấm điểm từng thành phần
    // a. RSI Score (sử dụng ngưỡng động)
    int rsi_score = 0
    if ta.crossunder(rsi_val, rsi_sell_lvl)
        rsi_score := -15
    else if ta.crossover(rsi_val, rsi_buy_lvl)
        rsi_score := 15
    else if rsi_val < rsi_sell_lvl and rsi_val < rsi_val[1]
        rsi_score := -10
    else if rsi_val > rsi_buy_lvl and rsi_val > rsi_val[1]
        rsi_score := 10
    
    // b. MACD Score (giữ nguyên)
    int macd_score = 0
    if ta.crossunder(macd_hist, 0)
        macd_score := -15
    else if ta.crossover(macd_hist, 0)
        macd_score := 15
    else if macd_hist < 0 and macd_hist < macd_hist[1]
        macd_score := -10
    else if macd_hist > 0 and macd_hist > macd_hist[1]
        macd_score := 10
    
    // c. Volume Score (giữ nguyên)
    int vol_score = 0
    is_bullish_candle = close > open
    is_bearish_candle = close < open
    if volume > 2.0 * vol_sma
        vol_score := is_bullish_candle ? 15 : is_bearish_candle ? -15 : 0
    else if volume > 1.5 * vol_sma
        vol_score := is_bullish_candle ? 10 : is_bearish_candle ? -10 : 0
    else if volume < vol_sma
        vol_score := is_bullish_candle ? -10 : is_bearish_candle ? 10 : 0
    
    // Step 4: Tổng hợp và trả về kết quả
    total_score_l3 = rsi_score + macd_score + vol_score
    [total_score_l3, rsi_score, macd_score, vol_score, rsi_buy_lvl, rsi_sell_lvl]

// --- Layer 4 Function ---
f_getLayer4_Score(price, atr_len, proximity_mult, daily_mult, weekly_mult, likely_direction) =>
    [d_high, d_low, d_close] = request.security(syminfo.tickerid, "D", [high[1], low[1], close[1]], lookahead=barmerge.lookahead_on)
    [w_high, w_low, w_close] = request.security(syminfo.tickerid, "W", [high[1], low[1], close[1]], lookahead=barmerge.lookahead_on)
    d_p = (d_high + d_low + d_close) / 3
    d_r1 = 2 * d_p - d_low
    d_s1 = 2 * d_p - d_high
    d_r2 = d_p + (d_high - d_low)
    d_s2 = d_p - (d_high - d_low)
    w_p = (w_high + w_low + w_close) / 3
    w_r1 = 2 * w_p - w_low
    w_s1 = 2 * w_p - w_high
    w_r2 = w_p + (w_high - w_low)
    w_s2 = w_p - (w_high - w_low)
    atr_val = ta.atr(atr_len)
    proximity_zone = atr_val * proximity_mult
    
    float score = 0.0
    // Check Daily Pivots
    if likely_direction > 0
        if price <= d_s1 + proximity_zone and price >= d_s1 - proximity_zone
            score += 25 * daily_mult
        else if price <= d_s2 + proximity_zone and price >= d_s2 - proximity_zone
            score += 15 * daily_mult
        else if price >= d_r1 - proximity_zone and price <= d_r1 + proximity_zone
            score += -35 * daily_mult
        else if price >= d_r2 - proximity_zone and price <= d_r2 + proximity_zone
            score += -25 * daily_mult
    else if likely_direction < 0
        if price >= d_r1 - proximity_zone and price <= d_r1 + proximity_zone
            score += -25 * daily_mult
        else if price >= d_r2 - proximity_zone and price <= d_r2 + proximity_zone
            score += -15 * daily_mult
        else if price <= d_s1 + proximity_zone and price >= d_s1 - proximity_zone
            score += 35 * daily_mult
        else if price <= d_s2 + proximity_zone and price >= d_s2 - proximity_zone
            score += 25 * daily_mult
            
    // Check Weekly Pivots
    if likely_direction > 0
        if price <= w_s1 + proximity_zone and price >= w_s1 - proximity_zone
            score += 25 * weekly_mult
        else if price <= w_s2 + proximity_zone and price >= w_s2 - proximity_zone
            score += 15 * weekly_mult
        else if price >= w_r1 - proximity_zone and price <= w_r1 + proximity_zone
            score += -35 * weekly_mult
        else if price >= w_r2 - proximity_zone and price <= w_r2 + proximity_zone
            score += -25 * weekly_mult
    else if likely_direction < 0
        if price >= w_r1 - proximity_zone and price <= w_r1 + proximity_zone
            score += -25 * weekly_mult
        else if price >= w_r2 - proximity_zone and price <= w_r2 + proximity_zone
            score += -15 * weekly_mult
        else if price <= w_s1 + proximity_zone and price >= w_s1 - proximity_zone
            score += 35 * weekly_mult
        else if price <= w_s2 + proximity_zone and price >= w_s2 - proximity_zone
            score += 25 * weekly_mult

    [math.round(score), d_p, d_r1, d_s1, d_r2, d_s2, w_p, w_r1, w_s1, w_r2, w_s2]

// -----------------------------------------------------------------------------
// Section 3: CALCULATIONS & PLOTTING
// -----------------------------------------------------------------------------
// --- Calculate Scores ---
[score_L1, ema_val_L1, upper_channel_val, lower_channel_val] = f_getLayer1_Score(l1_price_src, l1_ema_len, l1_use_atr_logic, l1_atr_len, l1_atr_mult, l1_strong_mult)
[score_L2, basis_val, upper_val, lower_val] = f_getLayer2_Score_Adaptive(l2_bb_src, l2_bb_len, l2_bb_mult, l2_ma_type, score_L1, l2_vol_ma_len, l2_vol_mult)
[score_L3, s_rsi, s_macd, s_vol, rsi_buy_dynamic, rsi_sell_dynamic] = f_getLayer3_Score_Adaptive(score_L1, l3_rsi_src, l3_rsi_len, l3_macd_fast_len, l3_macd_slow_len, l3_macd_signal_len, l2_vol_ma_len)
likely_direction = score_L1 > 0 ? 1 : score_L1 < 0 ? -1 : 0
[score_L4, d_p, d_r1, d_s1, d_r2, d_s2, w_p, w_r1, w_s1, w_r2, w_s2] = f_getLayer4_Score(close, l4_atr_len, l4_proximity_mult, l4_daily_pivot_mult, l4_weekly_pivot_mult, likely_direction)

total_score = score_L1 + score_L2 + score_L3 + score_L4

// --- Visual Outputs on Main Chart ---
// 1. Plot Layer 1 & 2 Indicators
plot(ema_val_L1, "EMA Main Trend", color=color.new(#ff9800, 0), linewidth=2) // Cam đậm
upper_plot = plot(l1_use_atr_logic and show_channel ? upper_channel_val : na, "Upper Channel", color=color.new(#9c27b0, 80), style=plot.style_circles, linewidth=1) // Tím nhạt, chấm tròn
lower_plot = plot(l1_use_atr_logic and show_channel ? lower_channel_val : na, "Lower Channel", color=color.new(#9c27b0, 80), style=plot.style_circles, linewidth=1) // Tím nhạt, chấm tròn
fill(upper_plot, lower_plot, color=color.new(#9c27b0, 95), title="ATR Channel Fill") // Nền tím rất mờ

plot_basis = plot(basis_val, "BB Basis", color=color.new(#2196f3, 0), linewidth=2) // Xanh dương đậm, dày
plot_upper = plot(upper_val, "BB Upper", color=color.new(color.gray, 70), linewidth=1) // Xám nhạt
plot_lower = plot(lower_val, "BB Lower", color=color.new(color.gray, 70), linewidth=1) // Xám nhạt
fill(plot_upper, plot_lower, color=color.new(color.gray, 95), title="BB Fill") // Nền xám rất mờ

// 2. Plot Layer 4 Indicators
// Weekly Pivots (Solid, Thicker - Quan trọng nhất)
plot(show_pivots ? w_p : na, "Weekly Pivot", color=color.new(color.yellow, 0), style=plot.style_linebr, linewidth=2)
plot(show_pivots ? w_s1 : na, "Weekly S1", color=color.new(#4caf50, 0), style=plot.style_linebr, linewidth=2) // Xanh lá cây đậm
plot(show_pivots ? w_r1 : na, "Weekly R1", color=color.new(#f44336, 0), style=plot.style_linebr, linewidth=2) // Đỏ đậm

// Daily Pivots (Dashed, Thinner - Chiến thuật)
// [FIXED] Removed invalid 'linestyle' argument. Differentiation is now by color and linewidth.
plot(show_pivots ? d_p : na, "Daily Pivot", color=color.new(color.gray, 30), style=plot.style_linebr)
plot(show_pivots ? d_s1 : na, "Daily S1", color=color.new(#a5d6a7, 30), style=plot.style_linebr) // Xanh lá cây nhạt
plot(show_pivots ? d_r1 : na, "Daily R1", color=color.new(#ef9a9a, 30), style=plot.style_linebr) // Đỏ nhạt


// 3. Display the score in Data Window
plot(score_L1, "SCS L1 Score", display=display.data_window)
plot(score_L2, "SCS L2 Score", display=display.data_window)
plot(score_L3, "SCS L3 Score (Tổng)", display=display.data_window)
plot(s_rsi, "  L3 - RSI Score", display=display.data_window)
plot(s_macd, "  L3 - MACD Score", display=display.data_window)
plot(s_vol, "  L3 - Volume Score", display=display.data_window)
plot(rsi_buy_dynamic, "  L3 - RSI Buy Threshold", display=display.data_window)
plot(rsi_sell_dynamic, "  L3 - RSI Sell Threshold", display=display.data_window)
plot(score_L4, "SCS L4 Score", display=display.data_window)
plot(total_score, "Total Score", display=display.data_window)

// 4. Real-time Monitoring Label
var label scoreLabel = na
label.delete(scoreLabel) 

if barstate.islast
    label_text = "SCS L1 (Xu hướng): " + str.tostring(score_L1) + 
                 "\nSCS L2 (Thiết lập): " + str.tostring(score_L2) + 
                 "\nSCS L3 (Kích hoạt): " + str.tostring(score_L3) +
                 "\n  (RSI:" + str.tostring(s_rsi) + ", MACD:" + str.tostring(s_macd) + ", Vol:" + str.tostring(s_vol) + ")" +
                 "\nSCS L4 (Cấu trúc): " + str.tostring(score_L4) +
                 "\n----------------------" +
                 "\nTổng Điểm: " + str.tostring(total_score)
    
    label_bgcolor = total_score > 69 ? color.new(color.green, 30) : 
                    total_score < -69 ? color.new(color.red, 30) : color.new(color.gray, 30)
    
    scoreLabel := label.new(bar_index, ta.highest(high, 20), text=label_text, 
                          color=label_bgcolor, textcolor=color.white, 
                          style=label.style_label_down, yloc=yloc.price, size=size.normal)
